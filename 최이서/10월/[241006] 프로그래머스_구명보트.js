// people: 사람들의 몸무게를 담은 배열
// limit: 구명보트의 무게 제한
function solution(people, limit) {
  let count = 0; // 구명보트 최솟값
  let left = 0;
  let right = people.length - 1;

  people.sort((a, b) => a - b);

  while (left <= right) {
    // 가장 가벼운 사람과 가장 무거운 사람을 함께 태울 수 있는 경우
    if (people[left] + people[right] <= limit) {
      left++;
      right--;
    } else {
      // 무거운 사람만 태우는 경우
      right--;
    }
    count++;
  }

  return count;
}

// 채점을 시작합니다.
// 정확성  테스트
// 테스트 1 〉	통과 (2.07ms, 35.4MB)
// 테스트 2 〉	통과 (1.13ms, 33.7MB)
// 테스트 3 〉	통과 (1.28ms, 33.6MB)
// 테스트 4 〉	통과 (1.11ms, 33.6MB)
// 테스트 5 〉	통과 (0.76ms, 33.5MB)
// 테스트 6 〉	통과 (0.44ms, 33.5MB)
// 테스트 7 〉	통과 (0.62ms, 33.6MB)
// 테스트 8 〉	통과 (0.17ms, 33.4MB)
// 테스트 9 〉	통과 (0.21ms, 33.5MB)
// 테스트 10 〉	통과 (1.15ms, 33.5MB)
// 테스트 11 〉	통과 (1.01ms, 33.5MB)
// 테스트 12 〉	통과 (0.97ms, 33.5MB)
// 테스트 13 〉	통과 (1.12ms, 31.6MB)
// 테스트 14 〉	통과 (1.63ms, 33.5MB)
// 테스트 15 〉	통과 (0.23ms, 33.5MB)
// 테스트 16 〉	통과 (0.15ms, 31.8MB)
// 테스트 17 〉	통과 (0.15ms, 33.4MB)
// 테스트 18 〉	통과 (0.15ms, 33.5MB)
// 테스트 19 〉	통과 (0.15ms, 33.4MB)
// 테스트 20 〉	통과 (0.14ms, 33.5MB)
// 테스트 21 〉	통과 (0.14ms, 33.5MB)
// 테스트 22 〉	통과 (0.15ms, 33.5MB)
// 효율성  테스트
// 테스트 1 〉	통과 (30.72ms, 37.7MB)
// 테스트 2 〉	통과 (12.40ms, 38.2MB)
// 테스트 3 〉	통과 (14.39ms, 38.2MB)
// 테스트 4 〉	통과 (11.76ms, 38.4MB)
// 테스트 5 〉	통과 (11.93ms, 38.1MB)
// 채점 결과
// 정확성: 81.5
// 효율성: 18.5
// 합계: 100.0 / 100.0
